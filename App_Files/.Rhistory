library(odbc)
con <- dbConnect(odbc(),
Driver = "SQLServer",
Server = "mysqlhost",
Database = "mydbname",
UID = "ubuntu",
#               PWD = rstudioapi::askForPassword("Database password")
Port = 3307)
sample1 = rnorm(n = 15, mean = 3, sd = 2)
sample2 = rnorm(n = 2-, mean = 3, sd = 3)
sample2 = rnorm(n = 20, mean = 3, sd = 3)
t.test(sample1,sample2)
sample1 = rnorm(n = 15, mean = 3, sd = 2)
sample2 = rnorm(n = 20, mean = 3, sd = 3)
t.test(sample1,sample2)
var.test(sample1,sample2)
sample1 = rnorm(n = 150, mean = 3, sd = 2)
sample2 = rnorm(n = 200, mean = 3, sd = 3)
t.test(sample1,sample2)
var.test(sample1,sample2)
one = c(1,2,3,2,3,2,3,2,3,1)
two = c(3,2,1,2,1,3,1,2,3,1)
chisq.test(one,two)
hist(one)
hist(two)
hist(one)
library(shiny); runApp('Bootcamp/RShiny Project/App_Files/Beer_App2.R')
runApp('Bootcamp/RShiny Project/App_Files/Beer_App2.R')
df <- datasource(iris)
df <- iris
View(df)
?lm
library(tidyverse)
df1 <- df %>%
filter(Species == "setosa" | Species == "versicolor")
model.fit <- glm(Species ~ ., data = df1, family = binomial)
summary(model.fit)
model.fit <- glm(Species ~ Sepal.Length, data = df1, family = binomial)
summary(model.fit)
model.fit <- glm(Species ~ Sepal.Length+Sepal.Wdith, data = df1, family = binomial)
model.fit <- glm(Species ~ Sepal.Length+Sepal.Width, data = df1, family = binomial)
summary(model.fit)
model.fit <- glm(Species ~ Sepal.Length + Petal.Length, data = df1, family = binomial)
model.fit <- glm(Species ~ Sepal.Length + Petal.Length, data = df1, family = binomial, control = list(maxit = 50))
summary(model.fit)
model.fit$residuals
model.fit <- glm(Species ~ Sepal.Length , data = df1, family = binomial)
summary(model.fit)
?bartlett.test
bartlett.test(df,Sepal.Length ~ Species)
bartlett.test(Sepal.Length ~ Species, data = df)
summarise(SL_SD = var(Sepal.Length)
df %>%
group_by(Species)%>%
summarise(SL_SD = var(Sepal.Length))
bartlett.test(Sepal.Width ~ Species, data = df)
df %>%
group_by(Species)%>%
summarise(SL_SD = var(Sepal.Length))
df %>%
group_by(Species)%>%
summarise(SL_SD = var(Sepal.Width))
?aov
summary(aov(Species ~ Sepaal.Width, data = df))
summary(aov(Species ~ Sepal.Width, data = df))
summary(aov(Sepal.Width ~ Species, data = df))
ggplot(df, aes(Sepal.width, color = Species))+
geom_point()
ggplot(df, aes(Sepal.Width, color = Species))+
geom_point()
ggplot(df, aes(Sepal.Width, color = Species))+
geom_histogram()
ggplot(df, aes(Sepal.Width, fill = Species))+
geom_histogram()
ggplot(df, aes(Sepal.Width, fill = Species))+
geom_density()
ggplot(df, aes(Sepal.Width, fill = Species))+
geom_density(alpha = .2)
summary(aov(Sepal.Width ~ Species, data = df))
model2.fit <- lm(Sepal.Length~Species, data = df)
summery(model2.fit)
summary(model2.fit)
model2.fit <- lm(Sepal.Length~., data = df)
summary(model2.fit)
model2.fit <- lm(Sepal.Length~Species, data = df)
summary(model2.fit)
t.test(Sepal.Length~Species, data = df1)
t.test(Sepal.Width~Species, data = df1)
View(df1)
library(tidyverse)
setwd("~/Bootcamp/RShiny Project")
Beer_bottles_cans <- read_csv("Beer_bottles_cans.csv")
Beer_kegs <- read_csv("Beer_kegs.csv")
Beer_in_brewery <- read_csv("Beer_on_brewery_premis.csv")
View(Beer_kegs)
View(Beer_in_brewery)
Beer_bottles_cans <- read_csv("Beer_bottles_cans.csv")
Beer_kegs <- read_csv("Beer_kegs.csv")
Beer_in_brewery <- read_csv("Beer_on_brewery_premis.csv")
View(Beer_bottles_cans)
Beer_bottles_cans <- read_csv("Beer_bottles_cans.csv")
Beer_kegs <- read_csv("Beer_kegs.csv")
Beer_in_brewery <- read_csv("Beer_on_brewery_premis.csv")
View(Beer_kegs)
View(Beer_in_brewery)
tidy_bottle_can_production = gather(Beer_bottles_cans,"year","number_breweries", -State)
tidy_bottle_can_production <- gather(Beer_bottles_cans,"year","bottle_can_production", -STATE)
View(tidy_bottle_can_production)
tidy_bottle_can_production <- gather(Beer_bottles_cans,"year","bottle_can_production", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(is.na(STATE))
tidy_bottle_can_production <- gather(Beer_bottles_cans,"year","bottle_can_production", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(!is.na(STATE))
View(tidy_bottle_can_production)
tidy_keg_production <- gather(Beer_kegs,"year","keg_production", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(!is.na(STATE))
tidy_sold_in_brewery <- gather(Beer_in_brewery,"year","sold_in_brewery", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(!is.na(STATE))
View(tidy_bottle_can_production)
View(tidy_keg_production)
beer_production_data <- full_join(tidy_bottle_can_production,tidy_keg_production, by =  c("STATE","year"))
View(beer_production_data)
beer_production_data <- full_join(tidy_bottle_can_production,tidy_keg_production, by =  c("STATE","year"))%>%
full_join(tidy_sold_in_brewery, by =  c("STATE","year"))
View(beer_production_data)
beer_production_data <- full_join(tidy_bottle_can_production,tidy_keg_production, by =  c("STATE","year"))%>%
full_join(tidy_sold_in_brewery, by =  c("STATE","year"))%>%
mutate(total_production = bottle_can_production + keg_production + sold_in_brewery)
View(beer_production_data)
beer_production_data <- full_join(tidy_bottle_can_production,tidy_keg_production, by =  c("STATE","year"))%>%
full_join(tidy_sold_in_brewery, by =  c("STATE","year"))%>%
replace_na(0)%>%
mutate(total_production = bottle_can_production + keg_production + sold_in_brewery)
beer_production_data <- full_join(tidy_bottle_can_production,tidy_keg_production, by =  c("STATE","year"))%>%
full_join(tidy_sold_in_brewery, by =  c("STATE","year"))
beer_production_data[is.na(beer_production_data)] <- 0
beer_production_data <- beer_production_data%>%
mutate(total_production = bottle_can_production + keg_production + sold_in_brewery)
View(beer_production_data)
write.csv(beer_production_data,"beer_prodction.csv")
View(beer_production_data)
tidy_pop = dataset %>%
gather("State","population",-Date)
file_list <- list.files()
file_list <- list.files()
file_list <- list.files()
file_list
file_list <- list.files()
file_list <- list.files()
setwd("~/Bootcamp/RShiny Project/stat_pop")
file_list <- list.files()
rm(dataset)
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset<- read_csv(file)
s = unlist(strsplit(names(dataset)[2],""))
names(dataset) = c("Date",paste0(s[1],s[2]))
}else{
new_data <- read_csv(file)
s = unlist(strsplit(names(new_data)[2],""))
names(new_data) = c("Date",paste0(s[1],s[2]))
dataset = full_join(dataset,new_data, by = "Date")
}
}
tidy_pop = dataset %>%
gather("State","population",-Date)
year_only = function(long_date){
return(as.numeric(substring(long_date,1,4)))
}
tidy_pop_year_only = mutate(tidy_pop,year = year_only(Date))%>%
select(-Date)
View(tidy_pop_year_only)
write.csv(tidy_pop_year_only,"tidy_pop_year_only.csv")
setwd("~/Bootcamp/RShiny Project")
Beer_bottles_cans <- read_csv("Beer_bottles_cans.csv")
Beer_kegs <- read_csv("Beer_kegs.csv")
Beer_in_brewery <- read_csv("Beer_on_brewery_premis.csv")
tidy_bottle_can_production <- gather(Beer_bottles_cans,"year","bottle_can_production", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(!is.na(STATE))
tidy_keg_production <- gather(Beer_kegs,"year","keg_production", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(!is.na(STATE))
tidy_sold_in_brewery <- gather(Beer_in_brewery,"year","sold_in_brewery", -STATE)%>%
mutate(year = as.numeric(year))%>%
filter(!is.na(STATE))
beer_production_data <- full_join(tidy_bottle_can_production,tidy_keg_production, by =  c("STATE","year"))%>%
full_join(tidy_sold_in_brewery, by =  c("STATE","year"))
beer_production_data[is.na(beer_production_data)] <- 0
beer_production_data <- beer_production_data%>%
mutate(total_production = bottle_can_production + keg_production + sold_in_brewery)
View(beer_production_data)
tidy_pop_year_only <- read_csv("tidy_pop_year_only.csv",
col_types = cols(X1 = col_skip()))
View(tidy_pop_year_only)
production_plus = full_join(beer_production_data,tidy_pop_year_only,by = c("STATE" = "State","year"))%>%
na.omit()
View(production_plus)
production_plus = full_join(beer_production_data,tidy_pop_year_only,by = c("STATE" = "State","year"))%>%
na.omit() %>%
mutate(percent_in_brewery = sold_in_brewery/total_production*100)
production_plus = full_join(beer_production_data,tidy_pop_year_only,by = c("STATE" = "State","year"))%>%
na.omit() %>%
mutate(percent_in_brewery = sold_in_brewery/total_production*100)%>%
mutate(prodcution_PP = total_prodcution/population)
production_plus = full_join(beer_production_data,tidy_pop_year_only,by = c("STATE" = "State","year"))%>%
na.omit() %>%
mutate(percent_in_brewery = sold_in_brewery/total_production*100)%>%
mutate(prodcution_PP = total_prodution/population)
production_plus = full_join(beer_production_data,tidy_pop_year_only,by = c("STATE" = "State","year"))%>%
na.omit() %>%
mutate(percent_in_brewery = sold_in_brewery/total_production*100)%>%
mutate(prodcution_PP = total_production/population)
production_plus = full_join(beer_production_data,tidy_pop_year_only,by = c("STATE" = "State","year"))%>%
na.omit() %>%
mutate(percent_in_brewery = sold_in_brewery/total_production*100)%>%
mutate(prodcution_PP = total_production/population)%>%
mutate(consumed_in_brewery_PP = sold_in_brewery/population)
write.csv(production_plus,"beer_prodction_final.csv")
production_plus%>%
ggplot(aes(percent_in_brewery,prodcution_PP))+
geom_point()
setwd("~/Bootcamp/RShiny Project/App_Files")
names(production_plus)
production_plus2 <- production_plus %>%
mutate(percent_in_can = bottle_can_production/total_production*100)%>%
mutate(percent_in_keg = keg_production/total_production*100)
write.csv(production_plus2,"beer_prodction_final.csv")
production_choices <- c("Total Beer Production",
"Beer Consumed in Breweries (per person)",
"Beer Produced (per person)",
"Production consumed in Breweries (%)",
"Production sold in Bottles and Cans (%)",
"Production sold in Kegs (%)")
production_choices
View(production_plus2)
names(production_plus2)
library(shiny); runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
?box
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
names(production_plus2)
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
beer_production_data <- read_csv("beer_prodction_final.csv",
col_types = cols(X1 = col_skip()))
View(beer_production_data)
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
population_data <- read_csv("Tidy_brewery_pop_data.csv")
statechoices <- unique(population_data$State)
sort(statechoices)
G1a <- gvisGeoChart(breweries2015, locationvar = "X2",
colorvar='Number of Breweries',
hovervar = 'stateyear',
options= myoptions)
runApp('Beer_App2.R')
runApp('Beer_App2.R')
View(population_data)
?sliderInput
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
?ggplotly
beer_production_data <- read_csv("beer_prodction_final.csv",
col_types = cols(X1 = col_skip()))
View(population_data)
View(beer_production_data)
runApp('Beer_App2.R')
library(readr)
beer_prodction_final <- read_csv("beer_prodction_final.csv")
View(beer_prodction_final)
beer_prodction_final <- read_csv("beer_prodction_final.csv")
View(beer_prodction_final)
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
?gvisGeoChart
runApp('Beer_App2.R')
runApp('Beer_App2.R')
beer_production_data <- read_csv("beer_prodction_final.csv",
col_types = cols(X1 = col_skip()))
View(beer_production_data)
runApp('Beer_App2.R')
round(43525.4254)
t = beer_production_data %>%
mutate('Total Production' = round(total_production))
View(t)
runApp('Beer_App2.R')
mutate('Brewery Consumption' = round(consumed_in_brewery_PP,2)
)
round(2.2452452,2)
t = beer_production_data %>%
mutate('Total Production' = round(total_production))%>%
mutate('Brewery Consumption' = round(consumed_in_brewery_PP,2))
runApp('Beer_App2.R')
t = beer_production_data %>%
mutate('Total Production' = round(total_production))%>%
mutate('Brewery Consumption (PP)' = round(consumed_in_brewery_PP,2))%>%
mutate('Consumed in Brewery (%)' = round(percent_in_brewery,2))%>%
mutate('Canned or Bottled (%)' = round(percent_in_can,2))%>%
mutate('Kegged (%)' = round(percent_in_keg,2)) %>%
mutate('Total Brewery Consumption' = round(consumed_in_brewery_PP,2))
library(tidyverse)
write.csv(t, "beer_prodction_final2")
names(t)
t = beer_production_data %>%
mutate('Total Production' = round(total_production))%>%
mutate('Brewery Consumption (PP)' = round(consumed_in_brewery_PP,2))%>%
mutate('Consumed in Brewery (%)' = round(percent_in_brewery,2))%>%
mutate('Canned or Bottled (%)' = round(percent_in_can,2))%>%
mutate('Kegged (%)' = round(percent_in_keg,2)) %>%
mutate('Total Production (PP)' = round(consumed_in_brewery_PP,2))
write.csv(t, "beer_prodction_final2")
names(t)
runApp('Beer_App2.R')
runApp('Beer_App2.R')
write.csv(t, "beer_prodction_final2")
write.csv(t, "beer_prodction_final2.csv")
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
r = c("fg,er")
r = c("df","df")
r
r +"sg"
r +c("sg")
append(r,"df")
append(r,"er")
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
runApp('Beer_App2.R')
